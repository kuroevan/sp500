library(swirl)
swirl()
str(mpg)
qplot(displ, hwy, data = mpg)
qplot(displ, hwy, data = mpg) + aes(color = drv)
qplot(displ, hwy, data = mpg, color = drv)
qplot(displ, hwy, data = mpg, color = drv, c() = "point", "smooth")
qplot(drv,hwy,data=mpg,geom="boxplot")
qplot(displ, hwy, data = mpg, color=drv, geom = c("point", "smooth"))
qplot(y=hwy, data = mpg, color = drv)
myhigh
qplot(drv,hwy,data=mpg,geom="boxplot")
qplot(drv,hwy,data=mpg,geom="boxplot", color = manufacturer)
qplot
qplot(hwy, data = mpg, fill = drv)
qplot(displ, hwy, data = mpg, facets = ~drv)
qplot(displ, hwy, data = mpg, facets = .~drv)
qplot(hwy, data = mpg, facets = drv ~ ., binwidth = 2)
qplot
qplot(displ, hwy, data = mpg, geom=c("point", "smooth"),facets=.~drv
)
g <- ggplot(mpg, aes(displ,hmy))
g <- ggplot(mpg, aes(displ,hwy))
summary(g)
g + geom_point()
g + geom_point() + geom_smooth()
g + geom_point() + geom_smooth(lm)
g + geom_point() + geom_smooth("lm")
g+geom_point()+geom_smooth(method="lm")
g+geom_point()+geom_smooth(method="lm") + facet_grid(.~drv)
g+geom_point()+geom_smooth(method="lm") + facet_grid(.~drv)+ ggtitle("Swirl Rules!")
g+geom_point(color="pink",size=4,alpha=1/2)
g+geom_point(size=4,alpha=1/2,aes(color=drv))
g + geom_point(aes(color = drv)) + labs(title="Swirl Rules!") + labs(x="Displacement", y="Hwy Mileage")
g + geom_point(aes(color = drv),size=2,alpha=1/2) + geom_smooth(size=4,linetype=3,method="lm",se=FALSE)
g + geom_point(color=drv) + theme_bw(base_family = "Times")
g + geom_point(aes(color = drv)) + theme_bw(base_family="Times")
plot(myx, myy, type = "l", ylim = c(-3,3))
g <- ggplot(testdat, aes(x = myx, y = myy))
g + geom_line()
g + geom_line() + ylim(-3,3)
g + geom_line() + coord_cartesian(ylim=c(-3,3))
g <- ggplot(mpg,aes(x=displ,y=hwy,color=factor(year)))
g + geom_point()
g + geom_point() + facet_grid(drv~cyl,margins=TRUE)
g + geom_point() + facet_grid(drv~cyl,margins=TRUE)+geom_smooth(method="lm",size=2,se=FALSE,color="black")
g + geom_point() + facet_grid(drv~cyl,margins=TRUE)+geom_smooth(method="lm",size=2,se=FALSE,color="black")+labs(x="Displacement",y="Highway Mileage",title="Swirl Rules!")
install.packages("Sleuth3")
library("Sleuth3")
qplot(Metab, Mass, data=ex0826, type=c("point","smooth"), method=lm)
library(ggplot2)
library(ggplot2)
qplot(Metab, Mass, data=ex0826, type=c("point","smooth"), method=lm)
qplot(Metab, Mass, data=ex0826, type=c("point","smooth"),methods(lm))
qplot(Metab, Mass, data=ex0826, type=c("point","smooth"),method=lm)
ggplot(ex0826, aes(x=Mass, y=Metab)) +
geom_point(color='#2980B9', size = 4) +
geom_smooth(method=lm, color='#2C3E50')
ggplot(ex0826, aes(x=Mass, y=Metab)) +
geom_point(color='#2980B9', size = 2) +
geom_smooth(method=lm, color='#2C3E50')
ggplot(ex0826, aes(x=log(Mass), y=log(Metab)) +
geom_point(color='#2980B9', size = 2) +
geom_smooth(method=lm, color='#2C3E50')
)
ggplot(ex0826, aes(x=log(Mass), y=log(Metab)) +
geom_point(color='#2980B9', size = 2) +
geom_smooth(method=lm, color='#2C3E50')
met <- read.csv("ex0826")
logmet<- log(ex0826$Metab)
logmass<- log(ex0826$Mass)
ggplot(ex0826, aes(x=logmass, y=logmet +
geom_point(color='#2980B9', size = 2) +
geom_smooth(method=lm, color='#2C3E50')
)
)
ggplot(ex0826, aes(x=logmass, y=logmet) +
geom_point(color='#2980B9', size = 2) +
geom_smooth(method=lm, color='#2C3E50')
)
ggplot(ex0826, aes(x=Mass, y=Metab)) +
geom_point(color='#2980B9', size = 2) +
geom_smooth(method=lm, color='#2C3E50')
ggplot(ex0826, aes(x=Mass, y=Metab)) +
geom_point(color='#2980B9', size = 2) +
geom_smooth(method=lm, color='#2C3E50')
ggplot(ex0826, aes(x=log(Mass), y=log(Metab))) +
geom_point(color='#2980B9', size = 2) +
geom_smooth(method=lm, color='#2C3E50')
metlm <- lm(Metab~Mass, data = ex0826)
summary(metlm)
metlm <- lm(log(Metab)~log(Mass), data = ex0826)
summary(metlm)
metres = resid(metlm)
plot(log(ex0826$Mass), metres,
+     ylab="Residuals", xlab="Mass"
abline(0, 0)
plot(log(ex0826$Mass), metres,
+     ylab="Residuals", xlab="Mass"
plot(log(ex0826$Mass), metres,
+     ylab="Residuals", xlab="Mass")
plot(log(ex0826$Mass), metres,
+     ylab="Residuals", xlab="Mass")
plot(ex0826$Mass,metres)
plot(ex0826$log(Mass),metres)
plot(log(ex0826$Mass),metres)
abline(0,0)
plot(log(ex0826$Mass),metres, ylab = "Residuals", xlab = "Mass")
abline(0,0)
ex0829
ggplot(ex0829, aes(x=Prevalence, y=Year)) +
+     geom_point(color='#2980B9', size = 2) +
+     geom_smooth(method=lm, color='#2C3E50')
ggplot(ex0829, aes(x=Prevalence, y=Year))
ggplot(ex0829, aes(x=Year, y=Prevalence))
ggplot(ex0829, aes(x=Year, y=Prevalence))
+
+     geom_point(color='#2980B9', size = 2)
library(fpp) #fpp package must be installed first
library(tseries)
library(TTR)
births <- scan("http://docs10.minhateca.com.br/150176204,BR,0,0,nybirths.dat.txt")
births
births <- scan("http://docs10.minhateca.com.br/150176204,BR,0,0,nybirths.dat.txt")
births <- read.table("nybirths.dat.txt", header=FALSE)
births
getwd()
ls
setwd("/home/kuroevan/Desktop/R-Projects/lab11")
getwd()
births <- scan("http://docs10.minhateca.com.br/150176204,BR,0,0,nybirths.dat.txt")
births <- read.table("nybirths.dat.txt", header=FALSE)
births
births.ts <- ts(births, frequency=12, start=c(1946,1))
births.tsComp <- decompose(births.ts)
plot(births.tsComp)
births.tsCompadj <- births.ts - births.tsComp$seasonal
plot(births.tsCompadj)
birth.stl <- stl(births.ts, s.window=7)
birth.stl <- stl(births.ts)
birth.stl <- stl(births.tsCompadj, s.window = 7)
birth.stl <- stl(births.ts, s.window = 7)
data(elecequip)
fit <- stl(elecequip, s.window = 5)
elecequip
plot(elecequip, col="gray",
main="Electrical equipment manufacturing",
ylab="New orders index", xlab="")
lines(fit$time.series[,2],col="red",ylab="Trend")
plot(fit)
monthplot(fit$time.series[,"seasonal"],main='',ylab="Seasonal")
plot(elecsales, main="Residential electricity sales",
ylab="GWh", xlab="Year")
lines(ma(elecsales,5),col="red")
plot(elecequip, ylab="New orders index", col="gray",
main="Electrical equipment manufacturing (Euro area)")
lines(ma(elecequip, order=12), col="red")
plot(elecequip, col="grey",
main="Electrical equipment manufacturing",
xlab="", ylab="New orders index")
lines(seasadj(fit), col="red",ylab="Seasonally adjusted")
kings <- scan("http://robjhyndman.com/tsdldata/misc/kings.dat",skip=3)
data(oil)
oildata <- window(oil, timeDate, start=1996,end=2007)
oildata <- window(oil, subset(timeDate, start=1996,end=2007)
oildata <- window(oil, subset(timeDate, start=1996,end=2007)
oildata <- window(oil, subset(timeDate, start=1996 & end=2007)
oil
oildata <- window(oil, subset(oil, timeDate=1996:2007))
getwd()
kings <- read.table("kings.dat.txt", header=FALSE)
kings <- read.table("king.dat.txt", header=FALSE)
kingsTS <- ts(kings)
kingsts.ma3 <- SMA(kingsTS,n=3)
kingsts.ma8 <- SMA(kingsTS, n=8)
plot.ts(kingsts.ma8)
birth.stl <- stl(births.ts, s.window = 7)
birth.stl <- stl(births.tsComp, s.window = 7)
birth.stl <- stl(births.ts, s.window = 7)
oildata <- window(oil, subset(oil, start=1996,end=2007))
oildata <- window(oil, subset(oil, start=1996,end=2007))
install.packages("tseries")
install.packages("tseries")
library(tseries)
SNPdata <- get.hist.quote('^gspc',quote="Close")
SNPret <- log(lag(SNPdata)) - log(SNPdata)
SNPvol <- sd(SNPret) * sqrt(250) * 100
## volatility
get
Vol <- function(d, logrets)
{
var = 0
lam = 0
varlist <- c()
for (r in logrets) {
lam = lam*(1 - 1/d) + 1
var = (1 - 1/lam)*var + (1/lam)*r^2
varlist <- c(varlist, var)
}
sqrt(varlist)
}
# Recreate Figure 6.12 in the text on page 155
volest <- Vol(10,SNPret)
volest2 <- Vol(30,SNPret)
volest3 <- Vol(100,SNPret)
plot(volest,type="l")
lines(volest2,type="l",col="red")
lines(volest3, type = "l", col="blue")
birth.stl <- stl(births.ts, s.window = 7)
install.packages("tseries")
library(tseries)
SNPdata <- get.hist.quote('^gspc',quote="Close")
SNPret <- log(lag(SNPdata)) - log(SNPdata)
SNPvol <- sd(SNPret) * sqrt(250) * 100
## volatility
get
Vol <- function(d, logrets)
{
var = 0
lam = 0
varlist <- c()
for (r in logrets) {
lam = lam*(1 - 1/d) + 1
var = (1 - 1/lam)*var + (1/lam)*r^2
varlist <- c(varlist, var)
}
sqrt(varlist)
}
# Recreate Figure 6.12 in the text on page 155
volest <- Vol(10,SNPret)
volest2 <- Vol(30,SNPret)
volest3 <- Vol(100,SNPret)
plot(volest,type="l")
lines(volest2,type="l",col="red")
lines(volest3, type = "l", col="blue")
getwd()
setwd("/home/kuroevan/Desktop/R-Projects/lab11/sp500")
getwd()
